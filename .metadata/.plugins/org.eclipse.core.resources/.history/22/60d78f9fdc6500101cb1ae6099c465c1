package service;


import java.security.PublicKey;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Random;

import org.hibernate.sql.model.jdbc.DeleteOrUpsertOperation;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
@Service
public class duplicate {  // 把接收到的牌list 处理  如果有空的补齐 
	//把所有牌的list 复制样本 并删掉所有已经知道的牌
	
	public List<String> deList;
	public List<String> copy;
	public List<String> oppList;
	public List<String> oppCopy;
	@Autowired public  fraction frac ;
	Random random = new Random();
	public void delete(List<String> cards) {
		deList = new ArrayList(cards); // 拿到公牌 +自己的手牌
	}
	public   void copydeal(List<String> allList) {
		copy =  new ArrayList (allList); //拿到副本 要用Arraylist  arrayslist 是不可以修改的
		copy.removeAll(deList);  //删除掉7张牌
		}
	public void  complete() { //补全 如果转牌和河牌是""的话  补牌 并且从copy 牌库里删除
	
		if(deList.get(3).isEmpty()) {
			int num3 = random.nextInt(copy.size());
			deList.set(3,copy.get(num3));
			copy.remove(num3);
		}
		if(deList.get(4).isEmpty()) {
			int num4 = random.nextInt(copy.size());
			deList.set(4, copy.get(num4));
		  copy.remove(num4);
		}
		System.out.print(copy);
		frac.myhand(deList,1); //把牌传过去 排序打分
	}
	
	public void opponent () { //随机生成对手的手牌list 
		oppList = new ArrayList<String>(deList);// 副本 替换最后的两张手牌 
		oppCopy =new ArrayList<String>(copy); // 全部牌的副本
		int card1 = random.nextInt(copy.size());
		oppList.set(5, copy.get(card1)); //替换手牌1
		oppCopy.remove(card1);
		int card2 =random.nextInt(oppCopy.size());
		oppList.set(6, oppCopy.get(card2)); //替换手牌2
		oppCopy.remove(card2);
		System.out.println(oppList);
		frac.myhand(oppList, 2); //对手的牌组
	}
	public void Sys() {
		frac.text();
	}
}
